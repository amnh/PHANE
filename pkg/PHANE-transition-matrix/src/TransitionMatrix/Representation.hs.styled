-- |
-- Module      :  TransitionMatrix.Representation
-- Copyright   :  (c) 2015-2021 Ward Wheeler
-- License     :  BSD-style
--
-- Maintainer  :  wheeler@amnh.org
-- Stability   :  provisional
-- Portability :  portable
--

{-# LANGUAGE DeriveAnyClass        #-}
{-# LANGUAGE DeriveGeneric         #-}
{-# LANGUAGE DerivingStrategies    #-}
{-# LANGUAGE FlexibleContexts      #-}
{-# LANGUAGE FlexibleInstances     #-}
{-# LANGUAGE LambdaCase            #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE Strict                #-}
{-# LANGUAGE UnboxedSums           #-}

module TransitionMatrix.Representation
    ( TransitionMatrix(..)
    ) where

import           Control.DeepSeq
import           Data.Bits
import           Data.Coerce
import           Data.Hashable
import           Data.Word                                ( Word64 )
import           Foreign.C.Types                          ( CUInt )
import           GHC.Generics
import           Layout.Compact.States
import           Layout.Memoize.States
import           Layout.Special.Type
import           Measure.Range
import           Measure.Transition
import           Measure.Unit.SymbolCount
import           Measure.Unit.SymbolIndex


-- |
-- Represents the metric for some discrete characters or dynamic characters.
-- The representation is highly optimized for both time and space efficiency.
-- Because of this, the term "compact" is used to describe the representation.
--
-- If any measure has an 'iota' symbol count, i.e. a symbol count of less than
-- or equal to 'infimumSymbolLimit', the compact representation will pre-compute
-- the entire transition cost matrix in a structure which is 'Storable' and
-- inter-operable with the C FFI. If and only if the measure is specified for an
-- 'iota' symbol count will 'getCompactPairwise' return a @Just@ value.
--
-- Additionally, the compact representation notes if the discrete metric, the
-- discrete metric adjoined by the gap symbol, or the L1 norm are the specified
-- measure. If any of these metrics are specified, specialized functions which
-- are more efficient will be returned when calling 'symbolDistances', 'stateTransitionPairwiseDispersion', and
-- 'stateTransitionThreewayDispersion'.
--
-- Notably, if it is the case that /both/ the measure has an 'iota' symbol count
-- /and/ the measure is a specialized metric described above, then calling 'getCompactPairwise'
-- returns a /compile-time/ pre-computed transition cost matrix. Multiple
-- "constructions" of the same metric will result in the same "singlton" compact
-- representation.
--
-- Finally, if a specified measure has more than an 'iota' symbol count /and/ is
-- not one of the specialized metrics described above, then a /sparse/ and
-- /memoized/ representation is stored.
--
-- It is important to use this type in the metadata decorations rather than store
-- a function because a function cannot be contained in a compact region.
--
-- Use the 'symbolDistances', 'stateTransitionPairwiseDispersion', 'stateTransitionThreewayDispersion', and 'getCompactPairwise' to the retrieve the
-- desired functions.
data  TransitionMatrix a
    = IotaMatrix      {-# UNPACK #-} (Maybe SpecializableMetric) {-# UNPACK #-} StateTransitionsCompact
    | VastMatrix      {-# UNPACK #-} (Sparse a)
    | VastSpecialized {-# UNPACK #-} SpecializableMetric
    deriving stock    (Generic)
    deriving anyclass (NFData)


instance Eq (TransitionMatrix a) where

    (==) (VastMatrix      x    ) (VastMatrix      x'     ) = x == x'
    (==) (VastSpecialized x    ) (VastSpecialized x'     ) = x == x'
    (==) (IotaMatrix (Just x) _) (IotaMatrix (Just x') _ ) = x == x'
    (==) (IotaMatrix Nothing  x) (IotaMatrix Nothing   x') = x == x'
    (==) _ _ = False


instance HasEditExtrema (TransitionMatrix a) where

    {-# INLINABLE maxEdit #-}
    maxEdit (IotaMatrix _ mtx   ) = maxEdit mtx
    maxEdit (VastMatrix      mtx) = maxEdit mtx
    maxEdit (VastSpecialized met) = maxEdit met

    maxDeletion (IotaMatrix _ mtx   ) = maxDeletion mtx
    maxDeletion (VastMatrix      mtx) = maxDeletion mtx
    maxDeletion (VastSpecialized met) = maxDeletion met

    maxInsertion (IotaMatrix _ mtx   ) = maxInsertion mtx
    maxInsertion (VastMatrix      mtx) = maxInsertion mtx
    maxInsertion (VastSpecialized met) = maxInsertion met

    {-# INLINABLE minEdit #-}
    minEdit (IotaMatrix _ mtx   ) = minEdit mtx
    minEdit (VastMatrix      mtx) = minEdit mtx
    minEdit (VastSpecialized met) = minEdit met

    minDeletion (IotaMatrix _ mtx   ) = minDeletion mtx
    minDeletion (VastMatrix      mtx) = minDeletion mtx
    minDeletion (VastSpecialized met) = minDeletion met

    minInsertion (IotaMatrix _ mtx   ) = minInsertion mtx
    minInsertion (VastMatrix      mtx) = minInsertion mtx
    minInsertion (VastSpecialized met) = minInsertion met


instance HasSymbolDistances (TransitionMatrix a) where

    symbolDistances (IotaMatrix _ mtx   ) = symbolDistances mtx
    symbolDistances (VastMatrix      mtx) = symbolDistances mtx
    symbolDistances (VastSpecialized met) = symbolDistances met


instance HasSymbolCount (TransitionMatrix a) where

    symbolCount (IotaMatrix _ mtx   ) = coerce $ matrixSize mtx
    symbolCount (VastMatrix      mtx) = symbolCount mtx
    symbolCount (VastSpecialized met) = symbolCount met


instance HasStateTransitionsCompact (TransitionMatrix a) where

    getCompactPairwise (IotaMatrix _ tcm) = getCompactPairwise mtx
    getCompactPairwise _ = Nothing

    getCompactThreeway (IotaMatrix _ tcm) = getCompactThreeway mtx
    getCompactThreeway _ = Nothing



-- |
-- Generally less desireable instance.
instance (FiniteBits a, Hashable a) => HasStateTransitions (TransitionMatrix a) a where

    -- |
    -- /O(1)/
    stateTransitionPairwiseDispersion (IotaMatrix _ mtx   ) = stateTransitionPairwiseDispersion mtx
    stateTransitionPairwiseDispersion (VastMatrix      mtx) = stateTransitionPairwiseDispersion mtx
    stateTransitionPairwiseDispersion (VastSpecialized met) = stateTransitionPairwiseDispersion met

    -- |
    -- /O(1)/
    stateTransitionPairwiseDistance (IotaMatrix _ mtx   ) = stateTransitionPairwiseDistance mtx
    stateTransitionPairwiseDistance (VastMatrix      mtx) = stateTransitionPairwiseDistance mtx
    stateTransitionPairwiseDistance (VastSpecialized met) = stateTransitionPairwiseDistance met

    -- |
    -- /O(1)/
    stateTransitionPairwiseMedian (IotaMatrix _ mtx   ) = stateTransitionPairwiseMedian mtx
    stateTransitionPairwiseMedian (VastMatrix      mtx) = stateTransitionPairwiseMedian mtx
    stateTransitionPairwiseMedian (VastSpecialized met) = stateTransitionPairwiseMedian met

    -- |
    -- /O(1)/
    stateTransitionThreewayDispersion (IotaMatrix _ mtx   ) = stateTransitionThreewayDispersion mtx
    stateTransitionThreewayDispersion (VastMatrix      mtx) = stateTransitionThreewayDispersion mtx
    stateTransitionThreewayDispersion (VastSpecialized met) = stateTransitionThreewayDispersion met

    -- |
    -- /O(1)/
    stateTransitionThreewayDistance (IotaMatrix _ mtx   ) = stateTransitionThreewayDistance mtx
    stateTransitionThreewayDistance (VastMatrix      mtx) = stateTransitionThreewayDistance mtx
    stateTransitionThreewayDistance (VastSpecialized met) = stateTransitionThreewayDistance met

    -- |
    -- /O(1)/
    stateTransitionThreewayMedian (IotaMatrix _ mtx   ) = stateTransitionThreewayMedian mtx
    stateTransitionThreewayMedian (VastMatrix      mtx) = stateTransitionThreewayMedian mtx
    stateTransitionThreewayMedian (VastSpecialized met) = stateTransitionThreewayMedian met



instance {-# OVERLAPPING #-} HasStateTransitions (TransitionMatrix CUInt) CUInt where

    -- |
    -- /O(1)/
    stateTransitionPairwiseDispersion (IotaMatrix _ mtx   ) = stateTransitionPairwiseDispersion mtx
    stateTransitionPairwiseDispersion (VastMatrix      mtx) = stateTransitionPairwiseDispersion mtx
    stateTransitionPairwiseDispersion (VastSpecialized met) = stateTransitionPairwiseDispersion met

    -- |
    -- /O(1)/
    stateTransitionPairwiseDistance (IotaMatrix _ mtx   ) = stateTransitionPairwiseDistance mtx
    stateTransitionPairwiseDistance (VastMatrix      mtx) = stateTransitionPairwiseDistance mtx
    stateTransitionPairwiseDistance (VastSpecialized met) = stateTransitionPairwiseDistance met

    -- |
    -- /O(1)/
    stateTransitionPairwiseMedian (IotaMatrix _ mtx   ) = stateTransitionPairwiseMedian mtx
    stateTransitionPairwiseMedian (VastMatrix      mtx) = stateTransitionPairwiseMedian mtx
    stateTransitionPairwiseMedian (VastSpecialized met) = stateTransitionPairwiseMedian met

    -- |
    -- /O(1)/
    stateTransitionThreewayDispersion (IotaMatrix _ mtx   ) = stateTransitionThreewayDispersion mtx
    stateTransitionThreewayDispersion (VastMatrix      mtx) = stateTransitionThreewayDispersion mtx
    stateTransitionThreewayDispersion (VastSpecialized met) = stateTransitionThreewayDispersion met

    -- |
    -- /O(1)/
    stateTransitionThreewayDistance (IotaMatrix _ mtx   ) = stateTransitionThreewayDistance mtx
    stateTransitionThreewayDistance (VastMatrix      mtx) = stateTransitionThreewayDistance mtx
    stateTransitionThreewayDistance (VastSpecialized met) = stateTransitionThreewayDistance met

    -- |
    -- /O(1)/
    stateTransitionThreewayMedian (IotaMatrix _ mtx   ) = stateTransitionThreewayMedian mtx
    stateTransitionThreewayMedian (VastMatrix      mtx) = stateTransitionThreewayMedian mtx
    stateTransitionThreewayMedian (VastSpecialized met) = stateTransitionThreewayMedian met


instance {-# OVERLAPPING #-} HasStateTransitions (TransitionMatrix Word64) Word64 where

    -- |
    -- /O(1)/
    stateTransitionPairwiseDispersion (IotaMatrix _ mtx   ) = stateTransitionPairwiseDispersion mtx
    stateTransitionPairwiseDispersion (VastMatrix      mtx) = stateTransitionPairwiseDispersion mtx
    stateTransitionPairwiseDispersion (VastSpecialized met) = stateTransitionPairwiseDispersion met

    -- |
    -- /O(1)/
    stateTransitionPairwiseDistance (IotaMatrix _ mtx   ) = stateTransitionPairwiseDistance mtx
    stateTransitionPairwiseDistance (VastMatrix      mtx) = stateTransitionPairwiseDistance mtx
    stateTransitionPairwiseDistance (VastSpecialized met) = stateTransitionPairwiseDistance met

    -- |
    -- /O(1)/
    stateTransitionPairwiseMedian (IotaMatrix _ mtx   ) = stateTransitionPairwiseMedian mtx
    stateTransitionPairwiseMedian (VastMatrix      mtx) = stateTransitionPairwiseMedian mtx
    stateTransitionPairwiseMedian (VastSpecialized met) = stateTransitionPairwiseMedian met

    -- |
    -- /O(1)/
    stateTransitionThreewayDispersion (IotaMatrix _ mtx   ) = stateTransitionThreewayDispersion mtx
    stateTransitionThreewayDispersion (VastMatrix      mtx) = stateTransitionThreewayDispersion mtx
    stateTransitionThreewayDispersion (VastSpecialized met) = stateTransitionThreewayDispersion met

    -- |
    -- /O(1)/
    stateTransitionThreewayDistance (IotaMatrix _ mtx   ) = stateTransitionThreewayDistance mtx
    stateTransitionThreewayDistance (VastMatrix      mtx) = stateTransitionThreewayDistance mtx
    stateTransitionThreewayDistance (VastSpecialized met) = stateTransitionThreewayDistance met

    -- |
    -- /O(1)/
    stateTransitionThreewayMedian (IotaMatrix _ mtx   ) = stateTransitionThreewayMedian mtx
    stateTransitionThreewayMedian (VastMatrix      mtx) = stateTransitionThreewayMedian mtx
    stateTransitionThreewayMedian (VastSpecialized met) = stateTransitionThreewayMedian met


instance MeasurableRange (TransitionMatrix a) SymbolIndex where

    meteasureRange (IotaMatrix _ mtx   ) = (coerce (0 :: Word), coerce . pred $ matrixSize tcm)
    meteasureRange (VastMatrix      mtx) = measureRange mtx
    meteasureRange (VastSpecialized met) = measureRange met


instance Show (TransitionMatrix a) where

    show = \case
        IotaMatrix (Just met) mtx -> renderWithBytes (fromEnum $ matrixSize mtx) met
        IotaMatrix _          mtx -> renderSummary mtx
        VastMatrix      mtx       -> show mtx
        VastSpecialized met       -> show met
