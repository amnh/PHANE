Cabal-Version: 3.8
Name:          PHANE-evaluation
Version:       0.1.0
Build-Type:    Simple
Tested-With:
  GHC == 9.8.1
  GHC == 9.6.3
  GHC == 9.4.7
  GHC == 9.2.8

Author:        Alex Washburn <github@recursion.ninja>
Copyright:     Â© 2022 Ward Wheeler and The American Museum of Natural History
License:       BSD-3-Clause
License-File:  LICENSE

Maintainer:    Ward Wheeler <wheeler@amnh.org>
Homepage:      https://github.com/AMNH/PHANE/blob/main/doc/ReadMe/Measure-Units.md
Bug-Reports:   https://github.com/AMNH/PHANE/issues

Synopsis:      Monad transformer for managing the stateful evaluation of PhyG scripts.
Description:
  This monad transformer provides a concrete, efficient implementation for many
  useful monad typeclasses required to manage the effects of the evaluating PhyG
  scripts. PhyG script evaluation is inherently stateful, requiring management of
  random seeds, logs, IO, global state variables, and error short-ciruiting.

Source-Repository head
  Type:        git
  Location:    git://github.com/AMNH/PHANE.git
  Subdir:      pkg/PHANE-evaluation

Flag Forego-Sanity
  Description: Compile with full optimizations
  Default:     False
  Manual:      True

Flag Optimize
  Description: Compile with full optimizations
  Default:     False
  Manual:      True


Common ghc-flags

  Ghc-Options:
    -fdiagnostics-color=always
    -fhide-source-paths
    -j

  Ghc-Prof-Options:
    -fprof-auto
    -fprof-cafs
    -optc
    -rdynamic

  If !flag(Optimize)
    Ghc-Options:
      -O0
  Else
    Ghc-Options:
      -O2
      -threaded
      -- Optimization flags
      -fexcess-precision
      -fexpose-all-unfoldings
      -flate-specialise
      -fmax-simplifier-iterations=16
      -foptimal-applicative-do
      -fspec-constr-count=8
      -fspec-constr-keen
      -fspecialize-aggressively
      -fstatic-argument-transformation

  If !flag(Forego-Sanity)
    Ghc-Options:
      -- Sanity check warnings
      --   1. Include all warnings by default
      -Weverything
      --   2. Exclude the undesirable warnings
      -Wno-all-missed-specialisations
      -Wno-implicit-prelude
      -Wno-inferred-safe-imports
      -Wno-missing-import-lists
      -Wno-missing-safe-haskell-mode
      -Wno-monomorphism-restriction
      -Wno-redundant-bang-patterns
      -Wno-type-defaults
      -Wno-unsafe

  If !flag(Forego-Sanity) && impl(ghc >=9.2)
    Ghc-Options:
      -Wno-missing-kind-signatures

  If !flag(Forego-Sanity) && impl(ghc >=9.4)
    Ghc-Options:
      -Wno-redundant-strictness-flags


Common language-specs

  Default-Extensions:
    DerivingStrategies
    ImportQualifiedPost
    LambdaCase
    NoGeneralizedNewtypeDeriving
    UnicodeSyntax
    
  Default-Language:
    GHC2021


Library 

  Import:
    ghc-flags,
    language-specs

  Build-Depends:
    async >= 2.2 && < 3.0,
    base >= 4.11 && < 5.0,
    bimap >= 0.3 && < 1.0,
    deepseq >= 1.4 && < 2.0,
    fast-logger >= 3.2 && < 4.0,
    MonadRandom >= 0.6 && < 1.0,
    mtl >= 2.2.2 && < 3.0,
    parallel >= 3.2 && < 4.0,
    primitive >= 0.8 && < 1.0,
    QuickCheck >= 2.14 && < 3.0,
    quickcheck-instances >= 0.3.22 && < 1.0,
    random >= 1.2 && < 2.0,
    stm,
    time >= 1.12 && < 2.0,
    unliftio >= 0.2 && < 1.0,
    unliftio-core >= 0.2 && < 1.0,

  Exposed-Modules:
    Control.Evaluation
    Control.Monad.Logger
    System.ErrorPhase

  Hs-Source-Dirs:
    src

  Other-Modules:
    Control.Evaluation.Result

  Visibility:
    public


